package com.dsa.bits;

public class SetGetClear_ith_bit {
	public static void main(String[] args) {
		int n = 70, i = 3;
		bitManipulation(n, i);
	}

	public static void bitManipulation(int num, int i) {
		int get = (num & (1 << i - 1)) != 0 ? 1 : 0;
		int set = num | (1 << i - 1);
		int clear = num & ~(1 << i - 1);
		System.out.print(get + " " + set + " " + clear);

	}

	public static int getIthbit(int num, int i) {
		int res = (num & (1 << i - 1));
		if (res != 0)
			return 1;
		else
			return 0;
	}

	public static int setIthbit(int num, int i) {
		int res = (num | (1 << i - 1));
		return res;
	}

	public static int clearIthbit(int num, int i) {
		int res = (num & (~(1 << (i - 1))));
		return res;
	}
}
