
//Given a binary tree, determine if it is height-balanced.
//A height-balanced binary tree is a binary tree in which the depth of the two subtrees of every node never differs by more than one.
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
//O(N)
//O(H)
class Solution {
    public boolean isBalanced(TreeNode root) {
        if(root==null)
            return true;
        int height=maxDepth(root);
        System.out.println(height);
        if(height==-1)return false;
        else  return true;
    }

    public int maxDepth(TreeNode root)
    {
        if(root==null)
            return 0;
         int left=maxDepth(root.left);
        int right=maxDepth(root.right);
        if(left==-1||right==-1)
            return -1;
        if(Math.abs(left-right)>1)
            return -1;
        else
            return 1+Math.max(left,right);
    }
}
