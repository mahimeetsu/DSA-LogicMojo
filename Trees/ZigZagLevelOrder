/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        List<List<Integer>> ansList=new ArrayList<>();
        if(root==null)
            return ansList;
        Queue<TreeNode> queue=new LinkedList<>();
        queue.add(root);
        boolean odd=true;
        while(!queue.isEmpty())
        {
            int size=queue.size();
            List<Integer> currRow=new LinkedList<>();

            for(int i=1;i<=size;i++)
            {
                TreeNode node=queue.poll();
                if(odd)
                {
                    currRow.add(node.val);
                }
                else
                {
                    currRow.addFirst(node.val);
                }
                if(node.left!=null)
                    {
                        queue.add(node.left);
                    }
                    if(node.right!=null)
                    {
                        queue.add(node.right);
                    }
                
            }
            odd=!odd;
            ansList.add(currRow);
        }
    return ansList;       
    }
}
