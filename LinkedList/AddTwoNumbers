/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
 /*
class Solution {
    public ListNode addTwoNumbers(ListNode head1, ListNode head2) {
         ListNode dummyHead=new ListNode(0);
        ListNode tail=dummyHead;
        int carry=0;
        while(head1!=null||head2!=null||carry!=0)
        {
            int digit1=(head1!=null)?head1.val:0;
            int digit2=(head2!=null)?head2.val:0;
            int sum=carry+digit1+digit2;
            int val=sum%10;
             carry=sum/10;
            ListNode newNode=new ListNode(val);
            tail.next=newNode;
            tail=tail.next;

            head1=(head1!=null)?head1.next:null;
            head2=(head2!=null)?head2.next:null;
        }
        //After the loop, obtain the actual result list by skipping the dummyHead node.
        ListNode result=dummyHead.next;
        //Delete the dummyHead node.
        dummyHead.next=null;
        return result;
    }
}
