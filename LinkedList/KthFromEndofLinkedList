Kth from end of LinkedList:



You are given the head of a linked list and the number k, You have to return the kth node from the end of linkedList. If k is more than the number of nodes, then the return -1.

Examples

Input: LinkedList: 1->2->3->4->5->6->7->8->9, k = 2
Output: 8
Explanation: The given linked list is 1->2->3->4->5->6->7->8->9. The 2nd node from end is 8.




/* Structure of node
class Node
{
    int data;
    Node next;
    Node(int d) {data = d; next = null; }
} */

class Solution {
    int getKthFromLast(Node head, int k) {
        Node temp=head;
        int count=0;
        while(temp!=null)
        {
            count++;
            temp=temp.next;
        }
        if(count<k)
        return -1;
        int index=0;
        temp=head;
        while(index<(count-k))
        {
            temp=temp.next;
            index++;
        }
        
        return temp.data;
    }
}


===============


class Solution {
    int getKthFromLast(Node head, int k) {
        Node temp=head;
        Node fast=head;
        Node slow=head;
        
        //move fast pointer k times
        for(int i=1;i<k;i++)
        {
            fast=fast.next;
            
            if(fast==null)
                return -1;
        }
        
        while(fast.next!=null)
        {
            slow=slow.next;
            fast=fast.next;
        }
        
        return slow.data;
    }
}
