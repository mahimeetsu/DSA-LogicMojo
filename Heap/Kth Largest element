Kth Largest element:

Given an integer array nums and an integer k, return the kth largest element in the array.

Note that it is the kth largest element in the sorted order, not the kth distinct element.

Can you solve it without sorting?
 

Example 1:

Input: nums = [3,2,1,5,6,4], k = 2
Output: 5
Example 2:

Input: nums = [3,2,3,1,2,4,5,5,6], k = 4
Output: 4

============

class Solution {
    public int findKthLargest(int[] nums, int k) {
        Arrays.sort(nums);
        return nums[nums.length-k];
    }
}

===========

class Solution {
    public int findKthLargest(int[] nums, int k) {
       PriorityQueue<Integer> pq=new PriorityQueue();//min heap
       if(nums.length==0)
       return -1;
       for(int n:nums)
       {
        pq.add(n);
        if(pq.size()>k)
        {
            pq.poll();//removing min element out of k element
        }
        //now return the kth largest element
       }
         return pq.peek();
    }
}


O(NLOGK)



===========

if we want kth smallest, then create max heap
