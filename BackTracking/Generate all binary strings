Given an integer n. You need to generate all the binary strings of n characters representing bits.

Note: Return the strings in  ascending order.

Examples:

Input: n = 2
Output: [00, 01, 10, 11]
Explanation: As each position can be either 0 or 1, the total possible combinations are 4.
Input: n = 3
Output: [000, 001, 010, 011, 100, 101, 110, 111]
Explanation: As each position can be either 0 or 1, the total possible combinations are 8.

=========

class Solution {
    public ArrayList<String> binstr(int n) {
        ArrayList<String> ansList=new ArrayList<>();
        helper(ansList,"",n);
        return ansList;
    }
    
    public void helper(ArrayList<String> list,String current,int n)
    {
        if(current.length()==n)
        {
            list.add(current);
            return;
        }
        //left recursive call
        helper(list,current+"0",n);
        helper(list,current+"1",n);
    }
}
